name: Merge

on:
  push:
    branches: [main]
    paths-ignore:
      - ".github/ISSUE_TEMPLATE/*"
      - "**.md"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  init:
    name: Initialize
    outputs:
      pr: ${{ steps.pr.outputs.pr }}
    runs-on: ubuntu-latest
    steps:
        # Get PR number for squash merges to main
      - id: pr
        uses: bcgov-nr/action-get-pr@v0.0.1

  deploys-test:
    name: TEST Deployments
    needs: [init]
    environment: test
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        name: [backend]
        include:
          - name: backend
            file: backend/openshift.deploy.yml
            overwrite: true
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v3.0.1
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          parameters:
            -p ZONE=test -p TAG=${{ needs.init.outputs.pr }}
            ${{ matrix.parameters }}
            -p IDIM_WEB_SERVICE_URL=${{ vars.IDIM_WEB_SERVICE_URL }}
            -p IDIM_WEB_SERVICE_ID=${{ secrets.IDIM_WEB_SERVICE_ID }}
            -p IDIM_WEB_SERVICE_USERNAME=${{ secrets.IDIM_WEB_SERVICE_USERNAME }}
            -p IDIM_WEB_SERVICE_PASSWORD=${{ secrets.IDIM_WEB_SERVICE_PASSWORD }}
            -p API_KEY=${{ secrets.API_KEY }}
          penetration_test: true

  deploys-prod:
    name: PROD Deployments
    needs: [init, deploys-test]
    environment: prod
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        name: [backend]
        include:
          - name: backend
            file: backend/openshift.deploy.yml
            overwrite: true
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v3.0.1
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          parameters:
            -p ZONE=prod -p TAG=${{ needs.init.outputs.pr }}
            ${{ matrix.parameters }}
            -p IDIM_WEB_SERVICE_URL=${{ vars.IDIM_WEB_SERVICE_URL }}
            -p IDIM_WEB_SERVICE_ID=${{ secrets.IDIM_WEB_SERVICE_ID }}
            -p IDIM_WEB_SERVICE_USERNAME=${{ secrets.IDIM_WEB_SERVICE_USERNAME }}
            -p IDIM_WEB_SERVICE_PASSWORD=${{ secrets.IDIM_WEB_SERVICE_PASSWORD }}
            -p API_KEY=${{ secrets.API_KEY }}
          penetration_test: false

  image-promotions:
    name: Promote images to PROD
    needs: [init, deploys-prod]
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    strategy:
      matrix:
        component: [backend]
    steps:
      - uses: shrink/actions-docker-registry-tag@v4
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.component }}
          target: ${{ needs.init.outputs.pr }}
          tags: prod
