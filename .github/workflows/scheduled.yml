name: Scheduled

on:
  schedule: [cron: "0 11 * * 6"] # 3 AM PST = 12 PM UDT, Saturdays
  workflow_dispatch:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ageOutPRs:
    name: PR Env Purge
    env:
      # https://tecadmin.net/getting-yesterdays-date-in-bash/
      DATE: "4 days ago"
      TYPE: "deployments"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4"
      - run: |
          # Login to OpenShift
          oc login --token=${{ secrets.OC_TOKEN }} --server=${{ vars.OC_SERVER }}
          oc project ${{ vars.OC_NAMESPACE }} # Safeguard!

          oc get ${{ env.TYPE }} -o go-template --template '{{range .items}}{{.metadata.name}} {{.metadata.creationTimestamp}}{{"\n"}}{{end}}' | \
            grep -v workspace | \
            awk '$2 <= "'$(date -d '${{ env.DATE }}' -Ins --utc | sed 's/+0000/Z/')'" { print $1 }' | \
            xargs --no-run-if-empty oc delete ${{ env.TYPE }}

  # Run sequentially to reduce chances of rate limiting
  zap_scan:
    runs-on: ubuntu-latest
    name: ZAP Scans
    env:
      DOMAIN: apps.silver.devops.gov.bc.ca
      PREFIX: ${{ github.event.repository.name }}-test
    steps:
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.11.0
        with:
          allow_issue_writing: true
          artifact_name: "zap_backend"
          cmd_options: "-a"
          issue_title: "ZAP: Backend"
          target: https://${{ env.PREFIX }}-backend.${{ env.DOMAIN }}/api
