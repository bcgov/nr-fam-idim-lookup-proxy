name: Pull Request

on:
  pull_request:

concurrency:
  # PR open and close use the same group, allowing only one at a time
  group: pr-${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  builds:
    name: Builds
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [backend]
        include:
          - package: backend
            triggers: ('backend/')
            build_file: ./backend/Dockerfile
            build_context: ./backend
    steps:
      - uses: actions/checkout@v4
      - uses: bcgov-nr/action-builder-ghcr@v2.2.0
        with:
          package: ${{ matrix.package }}
          tag: ${{ github.event.number }}
          tag_fallback: latest
          token: ${{ secrets.GITHUB_TOKEN }}
          triggers: ${{ matrix.triggers }}
          build_file: ${{ matrix.build_file }}
          build_context: ${{ matrix.build_context }}


  deploys:
    name: Deploys
    needs: builds
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        name: [backend]
        include:
          - name: backend
            file: backend/openshift.deploy.yml
            overwrite: true
            parameters:
              -p MIN_REPLICAS=1 -p MAX_REPLICAS=2
            triggers: ('backend/')
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v3.0.1
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          penetration_test: false
          parameters:
            -p ZONE=${{ github.event.number }} -p TAG=${{ github.event.number }}
            -p IDIM_WEB_SERVICE_URL=${{ vars.IDIM_WEB_SERVICE_URL }}
            -p IDIM_WEB_SERVICE_ID=${{ secrets.IDIM_WEB_SERVICE_ID }}
            -p IDIM_WEB_SERVICE_USERNAME=${{ secrets.IDIM_WEB_SERVICE_USERNAME }}
            -p IDIM_WEB_SERVICE_PASSWORD=${{ secrets.IDIM_WEB_SERVICE_PASSWORD }}
            -p API_KEY=${{ secrets.API_KEY }}
            ${{ matrix.parameters }}
          triggers: ${{ matrix.triggers }}
